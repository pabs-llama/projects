<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="Taskl 4.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="286"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title=".Browsables" custom_title="0" dock_id="23" table="0,10:Browsables"/><dock_state state="000000ff00000000fd0000000100000002000002b600000294fc0100000005fb000000160064006f0063006b00420072006f00770073006500310100000000000002b60000000000000000fb000000180064006f0063006b00420072006f007700730065003100320100000000000002b60000000000000000fb000000180064006f0063006b00420072006f007700730065003100370100000000ffffffff0000000000000000fb000000180064006f0063006b00420072006f007700730065003200320100000000ffffffff0000000000000000fb000000180064006f0063006b00420072006f007700730065003200330100000000ffffffff0000010100ffffff000002b60000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 13">CREATE TABLE Warehouses (
   Code INTEGER NOT NULL,
   Location VARCHAR(255) NOT NULL ,
   Capacity INTEGER NOT NULL,
   PRIMARY KEY (Code)
 );
CREATE TABLE Boxes (
    Code CHAR(4) NOT NULL,
    Contents VARCHAR(255) NOT NULL ,
    Value REAL NOT NULL ,
    Warehouse INTEGER NOT NULL,
    PRIMARY KEY (Code)
 );
</sql><sql name="SQL 14">INSERT INTO Warehouses(Code,Location,Capacity) VALUES(1,'Chicago',3);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(2,'Chicago',4);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(3,'New York',7);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(4,'Los Angeles',2);
 INSERT INTO Warehouses(Code,Location,Capacity) VALUES(5,'San Francisco',8);
 
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('0MN7','Rocks',180,3);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('4H8P','Rocks',250,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('4RT3','Scissors',190,4);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('7G3H','Rocks',200,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('8JN6','Papers',75,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('8Y6U','Papers',50,3);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('9J6F','Papers',175,2);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('LL08','Rocks',140,4);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('P0H6','Scissors',125,1);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('P2T6','Scissors',150,2);
 INSERT INTO Boxes(Code,Contents,Value,Warehouse) VALUES('TU55','Papers',90,5);
</sql><sql name="SQL 2">Task 3

--3.1 Select all warehouses.
SELECT * 
FROM Warehouses;

--3.2 Select all boxes with a value larger than $150.
SELECT * 
FROM Boxes 
WHERE Value&gt;150;

--3.3 Select all distinct contents in all the boxes.
SELECT DISTINCT Contents 
FROM Boxes;

--3.4 Select the average value of all the boxes.
SELECT ROUND(AVG(Value), 2) AS AvgValue
FROM Boxes;

--3.5 Select the warehouse code and the average value of the boxes in each warehouse.
SELECT Warehouse, ROUND(AVG(Value), 2) AS AvgValue 
FROM Boxes 
GROUP BY Warehouse;

--3.6 Same as previous exercise, but select only those warehouses where the average value of the boxes is greater than 150.
SELECT warehouse , AVG(value) AS “Average value”
FROM Boxes          
GROUP BY warehouse
HAVING AVG(value)&gt;150


--3.7 Select the code of each box, along with the name of the city the box is located in.
SELECT B.Code, W.Location 
FROM Boxes AS B
JOIN Warehouses AS W
ON B.Warehouse=W.Code
ORDER BY W.Code;

--3.8 Select the warehouse codes, along with the number of boxes in each warehouse. 
SELECT Warehouse, COUNT(*) AS number_of_boxes
FROM Boxes 
GROUP BY Warehouse;

--3.9 Select the codes of all warehouses that are saturated (a warehouse is saturated if the number of boxes in it is larger than the warehouse's capacity).
SELECT B.Warehouse, W.Capacity, COUNT(B.Code) AS number_of_boxes
FROM Warehouses AS W
JOIN Boxes AS B
ON W.Code=B.Warehouse
GROUP BY W.Code
HAVING W.Capacity &lt; number_of_boxes
ORDER BY W.Code;

--3.10 Select the codes of all the boxes located in Chicago.
SELECT B.Code, W.Location 
FROM Warehouses AS W
JOIN Boxes AS B
ON W.Code=B.Warehouse
WHERE W.Location = 'Chicago';

--3.11 Create a new warehouse in New York with a capacity for 3 boxes.
INSERT INTO Warehouses
VALUES(6, 'New York', 3);

--3.12 Create a new box, with code &quot;H5RT&quot;, containing &quot;Papers&quot; with a value of $200, and located in warehouse 2.
INSERT INTO Boxes
VALUES('H5RT', 'Paper', 200, 2);

--3.13 Reduce the value of all boxes by 15%.
UPDATE Boxes
SET Value = Value * 0.85;

--3.14 Remove all boxes with a value lower than $100.
DELETE FROM Boxes 
WHERE Value &lt; 100;

-- 3.15 Remove all boxes from saturated warehouses.

-- with CTE for MySQL
WITH overcapacity AS ( 
SELECT w.code as warehouse_code, capacity, COUNT(b.code) AS number_boxes 
FROM warehouses w 
JOIN boxes b ON w.code=b.warehouse 
GROUP BY w.code, capacity 
HAVING COUNT(b.code) &gt; capacity) 

DELETE
FROM Boxes
WHERE warehouse = (SELECT code FROM overcapacity);

--FOR POSGRE 
--DELETE b 
--FROM boxes b 
--JOIN overcapacity o ON b.warehouse=o.code;


-- 3.16 Add Index for column &quot;Warehouse&quot; in table &quot;boxes&quot;
    -- !!!NOTE!!!: index should NOT be used on small tables in practice
CREATE INDEX INDEX_WAREHOUSE 
ON Boxes (Warehouse);

-- 3.17 Print all the existing indexes
    -- !!!NOTE!!!: index should NOT be used on small tables in practice
SELECT * 
FROM SQLITE_MASTER 
WHERE type = &quot;index&quot;;

-- 3.18 Remove (drop) the index you added just
    -- !!!NOTE!!!: index should NOT be used on small tables in practice
DROP INDEX INDEX_WAREHOUSE;

</sql><current_tab id="1"/></tab_sql></sqlb_project>
